{"version":3,"sources":["logo.jpg","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","react_router_dom","to","concat","MissionKey","props","LAUNCHES_QUERY","gql","_templateObject","Launches","components_MissionKey","react_apollo_esm","query","loading","error","data","console","log","launches","map","index","key","Component","LAUNCH_QUERY","Launch_templateObject","Launch","this","match","params","parseInt","react","variables","launch_year","_launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3909a9df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7dab9996.jpg\";","import React from 'react'\nimport classNames from 'classnames'\nimport Moment from 'react-moment'\nimport { Link } from 'react-router-dom'\n\nexport default function LaunchItem ({ launch: { flight_number, mission_name, launch_date_local, launch_success } }) {\n\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4> Mission: <span className={classNames({\n            'text-success': launch_success,\n            'text-danger': !launch_success\n          })}>{mission_name}</span></h4>\n          <p> Date: <Moment format=\"DD-MM-YYYY HH:mm\">{launch_date_local}</Moment></p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\"> Launch Details</Link>\n        </div>\n      </div>\n    </div>\n  )\n\n}","import React from 'react'\n\nfunction MissionKey (props) {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\"/> = Success\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\"/> = Fail\n      </p>\n    </div>\n  )\n}\n\nexport default MissionKey","import React, { Component } from 'react'\nimport { gql } from 'apollo-boost'\nimport { Query } from 'react-apollo'\nimport LaunchItem from './LaunchItem'\nimport MissionKey from './MissionKey'\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n      \n    \n    }\n  \n  \n  }\n\n`\n\nclass Launches extends Component {\n  render () {\n    return (\n      <div>\n        <h1 className=\"display-4 my-3\"> Launches </h1>\n        <MissionKey/>\n        <Query query={LAUNCHES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>loading...</h4>\n            if (error) console.log(error)\n\n            return data.launches.map((launch, index) => (\n              <LaunchItem\n                key={index}\n                launch={launch}\n              />\n            ))\n          }}\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default Launches","import React, { Component, Fragment } from 'react'\nimport { gql } from 'apollo-boost'\nimport { Query } from 'react-apollo'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!) {\n        launch (flight_number: $flight_number){\n            flight_number\n            mission_name\n            launch_year\n            launch_date_local\n            launch_success\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n\n`\n\nclass Launch extends Component {\n  render () {\n\n    let { flight_number } = this.props.match.params\n    flight_number         = parseInt(flight_number)\n\n    return (\n      <div>\n        <Fragment>\n          <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n            {\n              ({ loading, error, data: { launch } }) => {\n                if (loading) return <h4>loading...</h4>\n                if (error) console.log(error)\n\n                const {\n                        mission_name,\n                        flight_number,\n                        launch_year,\n                        launch_success,\n                        rocket: { rocket_id, rocket_name, rocket_type }\n                      } = launch\n                return (\n                  <div>\n                    <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission: </span> {mission_name} </h1>\n                    <h4 className=\"mb-3\"> Launch Details</h4>\n                    <ul className=\"list-group\">\n                      <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n                      <li className=\"list-group-item\">Launch year: {launch_year}</li>\n                      <li className=\"list-group-item\">Launch successful: {' '}\n                        <span className={classNames({\n                          'text-success': launch_success,\n                          'text-danger': !launch_success\n                        })}>\n                         {launch_success ? 'Yes' : 'No'}\n                      </span></li>\n                    </ul>\n                    <h4 className=\"my-3\">Rocket Details</h4>\n                    <ul className=\"list-group\">\n                      <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                      <li className=\"list-group-item\">Rocket name: {rocket_name}</li>\n                      <li className=\"list-group-item\">Rocket type: {rocket_type}</li>\n\n                    </ul>\n\n                    <hr/>\n                    <Link to={'/'} className=\"btn btn-secondary\"> Back </Link>\n                  </div>\n                )\n              }\n            }\n          </Query>\n        </Fragment>\n\n      </div>\n    )\n  }\n}\n\nexport default Launch","import React from 'react'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport './bootstrap.min.css'\nimport './App.css'\nimport logo from './logo.jpg'\nimport Launches from './components/Launches'\nimport Launch from './components/Launch'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nfunction App () {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n\n        <div className=\"container\">\n          <img src={logo} alt=\"spaceX\" style={{ width: 300, display: 'block', margin: 'auto' }}/>\n          <Route exact path=\"/\" component={Launches}/>\n          <Route exact path=\"/launch/:flight_number\" component={Launch}/>\n\n        </div>\n      </Router>\n    </ApolloProvider>\n\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}